---
layout: default
title: "20241222系統分析的一些見解"
permalink: /20241222系統分析的一些見解/
---

在面對系統分析的課題時，核心原則是「理解目的、拆解問題、選用適當方法」。下述內容基於既有理解與觀察，部分方法尚未實際驗證。這個過程不論針對全新的系統或既有的老舊系統，皆圍繞著同一個根本問題：這個系統能為使用者解決什麼需求？以下就以「新的系統」與「舊的系統」兩種情境，整理一些系統分析的觀點。

## 開始之前：明確目的與範疇
在所有分析的起點，需先與利害關係人釐清兩件事：第一，使用者的核心需求與痛點；第二，系統要在多大範圍內解決問題。在大型專案中，問題往往不能一次解完，必須採用「分而治之」的策略，把問題拆解成多個可管理、可測試的子問題。這樣一來，溝通更有結構，也能漸進地獲取回饋，降低整體風險。

## 面對新的系統：從使用者視角出發

### 以使用者故事描繪場景
在初次設計新的系統時，可透過 UML 中的使用者故事（User Story）來描述行為。這種方式提供了一個聚焦於使用者的敘事框架，有助於梳理使用情境與流程。透過簡潔的敘述，一眼就能看出誰、在什麼情境下、需要什麼功能，以及目的為何。

範例：「身為一位會員，希望能夠透過網站查詢過往訂單，以便快速找到重複購買的商品。」

透過這樣的文本化描述，產品團隊和開發者就能從同一角度出發，在設計和實作上更容易取得共識。

### 探討系統事件：Event Storming
Event Storming 是一種適合討論複雜業務流程的工作坊方法。在分析新的系統時，可召集領域專家、技術人員以及利害關係人，以事件（Event）作為討論起點，逐步探索系統在不同時間點可能發生的事件及其互動。這過程中，除了能找出系統的功能點，也能藉由整合事件，把邊界、責任及整體流程梳理得更加清楚。

優點：
- 快速建立共同語言
- 洞察跨部門的協作過程
- 發現潛在的邏輯漏網之魚

## 面對舊的系統：以資料流觀察脈絡

既有系統常常缺乏完整文件，開發人員或使用者也可能已經流動，讓接手者難以掌握全貌。在這種情況下，可先以資料流分析作為起點，觀察資料如何在系統中流動、被轉換或儲存。

### 資料流圖保留行為
利用資料流圖（Data Flow Diagram, DFD），可以把資料輸入、處理過程和輸出位置抽象化，以便理解各元件之間的資料關係。透過層層解析（Level 0, Level 1...），能逐步揭露系統的底層架構。但這種方式更多是在探索「現況」，重點是維持原有行為不變；若要討論系統價值或重新設計時，仍需輔以其他方法。

### 避免在不了解價值前盲目改動
接手舊系統時，常會因為想要提升性能或進行改版而急於改寫。然而若沒有先理解原系統的「生存原因」，很容易遺失關鍵價值或功能。因此在分析過程中，需反覆確認：這個功能當初是為了什麼而存在？現在的使用者是否仍需要它？只有透過充分理解，才能在重構或升級時做出合適的取捨。

## 共同核心：事實與價值並重
不論是新系統或舊系統，最終仍要回到使用者與系統價值上。可用以下三個問題檢驗分析是否到位：

1. 事實是否清楚？系統目前的狀況、流程、限制是否已經明確掌握？
2. 價值是否凸顯？分析的結果是否有助於提升系統對使用者的價值？
3. 是否具有可操作性？最後所產出的文件或圖表，是否讓開發與產品團隊能夠採取行動？

當這三個問題皆能得到肯定的答案時，就代表分析階段已有扎實的成果，這些成果也能轉化為後續設計與實作的清晰藍圖。

## 結語：分析是持續的對話
系統分析不是一次性的工作，而是一種持續的對話過程。透過分而治之、使用者故事、Event Storming 以及資料流分析等方法，能在不同情境下保持清晰的思考架構，避免陷入細節泥沼。最重要的是，不管是新系統還是舊系統，只有深入理解「為何存在」的價值，才能在變遷的技術與需求中持續打造真正有意義的系統。
